defmodule Ttt do
  defstruct board: %{
              1 => -1,
              2 => -1,
              3 => -1,
              4 => -1,
              5 => -1,
              6 => -1,
              7 => -1,
              8 => -1,
              9 => -1
            }

  use GenServer

  @doc """
  A Tic-Tac-Toe server to save games state
  """

  @impl true
  def init(_init_arg) do
    {:ok, %Ttt{}}
  end

  @impl true
  def handle_call({:player1_input, input}, _from, board) do
    ## if board at input is -1,  put input and p1 at input
    ## if win, return win
    ## Done
    cond do
      Map.get(board.board, input) == -1 ->
        {:reply, :ok, %Ttt{board: %{board.board | input => 1}}}

      true ->
        {:reply, :ok, board}
    end

    {:reply, :ok, board}
  end

  def check_win(board) do
    case board do
      %{1 => 1, 2 => 1, 3 => 1, 4 => _, 5 => _, 6 => _, 7 => _, 8 => _, 9 => _} ->
        1

      %{1 => _, 2 => _, 3 => _, 4 => 1, 5 => 1, 6 => 1, 7 => _, 8 => _, 9 => _} ->
        1

      %{1 => _, 2 => _, 3 => _, 4 => _, 5 => _, 6 => _, 7 => 1, 8 => 1, 9 => 1} ->
        1

      %{1 => 1, 2 => _, 3 => _, 4 => 1, 5 => _, 6 => _, 7 => 1, 8 => _, 9 => _} ->
        1

      %{1 => _, 2 => 1, 3 => _, 4 => _, 5 => 1, 6 => _, 7 => _, 8 => 1, 9 => _} ->
        1

      %{1 => _, 2 => _, 3 => 1, 4 => _, 5 => _, 6 => 1, 7 => _, 8 => _, 9 => 1} ->
        1

      %{1 => 1, 2 => _, 3 => _, 4 => _, 5 => 1, 6 => _, 7 => _, 8 => _, 9 => 1} ->
        1

      %{1 => _, 2 => _, 3 => 1, 4 => _, 5 => 1, 6 => _, 7 => 1, 8 => _, 9 => _} ->
        1

      %{1 => 2, 2 => 1, 3 => 1, 4 => _, 5 => _, 6 => _, 7 => _, 8 => _, 9 => _} ->
        2

      %{1 => _, 2 => _, 3 => _, 4 => 2, 5 => 1, 6 => 1, 7 => _, 8 => _, 9 => _} ->
        2

      %{1 => _, 2 => _, 3 => _, 4 => _, 5 => _, 6 => _, 7 => 2, 8 => 1, 9 => 1} ->
        2

      %{1 => 2, 2 => _, 3 => _, 4 => 1, 5 => _, 6 => _, 7 => 1, 8 => _, 9 => _} ->
        2

      %{1 => _, 2 => 2, 3 => _, 4 => _, 5 => 1, 6 => _, 7 => _, 8 => 1, 9 => _} ->
        2

      %{1 => _, 2 => _, 3 => 2, 4 => _, 5 => _, 6 => 1, 7 => _, 8 => _, 9 => 1} ->
        2

      %{1 => 2, 2 => _, 3 => _, 4 => _, 5 => 1, 6 => _, 7 => _, 8 => _, 9 => 1} ->
        2

      %{1 => _, 2 => _, 3 => 2, 4 => _, 5 => 1, 6 => _, 7 => 1, 8 => _, 9 => _} ->
        2

      _ ->
        nil
    end
  end

  def test_fixture() do
    test_board = %{1 => 2, 2 => 2, 3 => 2, 4 => 1, 5 => 1, 6 => 1, 7 => -1, 8 => -1, 9 => -1}

    check_win(test_board)
  end
end
